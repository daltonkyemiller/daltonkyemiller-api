# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -Djasypt.encryptor.password=${{ secrets.JASYPT_SECRET }} -B package --file pom.xml
      
    - name: Save Jar
      uses: actions/upload-artifact@v3.0.0
      with:
        path: ${{ github.repository }}/target/*.jar
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v3.0.0
      
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: artifact
          path: target/
      - name: Docker Build
        run: |
          docker build . -t daltonkyemiller/daltonkyemiller-api:${{ needs.build.outputs.jar_version }}
      - name: Login to Docker Hub
        uses: docker/login-action@1.14.1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker push
        run: |
          docker push daltonkyemiller/daltonkyemiller-api:${{ needs.build.outputs.jar_version }}
  run:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    
    steps:
      - name: Send post request to trigger DigitalOcean Deploy
        run: |
          curl -X POST https://api.digitalocean.com/v2/apps/${{ secrets.DIGITALOCEAN_APP_ID }}/deployments \
          -H 'Content-Type: application/json' -H 'Authorization: ${{ secrets.DIGITALOCEAN_AUTH_HEADER }}'
          
